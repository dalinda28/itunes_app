{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/home/Documents/GitHub/itunes_app/components/Search/SearchView.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { SearchBar, ListItem } from \"react-native-elements\";\n\nvar Search = function (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  var _super = _createSuper(Search);\n\n  function Search() {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      results: [],\n      searchQuery: \"\",\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"_search\",\n    value: function _search() {\n      var _this2 = this;\n\n      if (this.state.searchQuery.length > 0) {\n        this.setState({\n          isLoading: true\n        });\n        fetch(\"https://itunes.apple.com/search?term=\" + this.state.searchQuery).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          _this2.setState({\n            results: data.results\n          });\n\n          _this2.setState({\n            isLoading: false\n          });\n        }).catch(function (error) {\n          return console.warn(error);\n        });\n      } else {\n        this.setState({\n          isLoading: false\n        });\n        this.setState({\n          results: []\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, React.createElement(SearchBar, {\n        placeholder: \"Type Here...\",\n        onChangeText: function onChangeText(text) {\n          _this3.setState({\n            searchQuery: text\n          }, _this3._search);\n        },\n        value: this.state.searchQuery,\n        placeholder: \"Rechercher...\",\n        autoCapitalize: \"none\",\n        showLoading: this.state.isLoading,\n        onClear: function onClear() {\n          _this3.setState({\n            results: []\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }), React.createElement(ScrollView, {\n        style: styles.resultsScroll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, this.state.results.map(function (result, index) {\n        return React.createElement(ListItem, {\n          key: index,\n          leftAvatar: {\n            source: {\n              uri: result.artworkUrl100\n            }\n          },\n          title: result.artistName,\n          subtitle: result.trackName,\n          bottomDivider: true,\n          subtitleStyle: {\n            color: \"tomato\"\n          },\n          onPress: function onPress() {\n            _this3.props.navigation.navigate('Result', {\n              id: result.trackId\n            });\n          },\n          chevron: true,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }\n        });\n      })));\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\nexport { Search as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  searchContainer: {\n    flex: 0.2,\n    backgroundColor: \"tomato\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingLeft: 20,\n    paddingRight: 20\n  },\n  input: {\n    borderBottomColor: \"#FFF\"\n  },\n  resultsScroll: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  }\n});","map":{"version":3,"sources":["/Users/home/Documents/GitHub/itunes_app/components/Search/SearchView.js"],"names":["React","SearchBar","ListItem","Search","state","results","searchQuery","isLoading","length","setState","fetch","then","response","json","data","catch","error","console","warn","styles","container","text","_search","resultsScroll","map","result","index","source","uri","artworkUrl100","artistName","trackName","color","props","navigation","navigate","id","trackId","Component","StyleSheet","create","flex","searchContainer","backgroundColor","justifyContent","alignItems","paddingLeft","paddingRight","input","borderBottomColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View, StyleSheet, ScrollView } from \"react-native\";\nimport { SearchBar, ListItem } from \"react-native-elements\";\n\nexport default class Search extends React.Component {\n\n    state = {\n        results: [],\n        searchQuery: \"\",\n        isLoading: false\n    }\n\n    _search() {\n        if (this.state.searchQuery.length > 0) {\n            this.setState({ isLoading: true });\n\n            fetch(\"https://itunes.apple.com/search?term=\" + this.state.searchQuery)\n                .then(response => response.json())\n                .then(data => {\n                    this.setState(\n                        {\n                            results: data.results\n                        }\n                    );\n                    this.setState({ isLoading: false });\n                })\n                .catch(error => console.warn(error));\n        }\n        else {\n            this.setState({ isLoading: false });\n            this.setState({ results: [] });\n        }\n    }\n\n    render() {\n        return (\n            <View style={styles.container}>\n                <SearchBar\n                    placeholder=\"Type Here...\"\n                    onChangeText={(text) => {\n                        this.setState({ searchQuery: text }, this._search);\n                    }\n                    }\n                    value={this.state.searchQuery}\n                    placeholder=\"Rechercher...\"\n                    autoCapitalize=\"none\"\n                    showLoading={this.state.isLoading}\n                    onClear={() => { this.setState({ results: [] }) }}\n                />\n                <ScrollView style={styles.resultsScroll}>\n                    {\n                        this.state.results.map((result, index) => (\n                            <ListItem\n                                key={index}\n                                leftAvatar={{ source: { uri: result.artworkUrl100 } }}\n                                title={result.artistName}\n                                subtitle={result.trackName}\n                                bottomDivider\n                                subtitleStyle={{ color: \"tomato\" }}\n                                onPress={() => { this.props.navigation.navigate('Result', { id: result.trackId }) }}\n                                chevron\n                            />\n                        ))\n                    }\n                </ScrollView>\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1\n    },\n    searchContainer: {\n        flex: 0.2,\n        backgroundColor: \"tomato\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingLeft: 20,\n        paddingRight: 20\n    },\n    input: {\n        borderBottomColor: \"#FFF\",\n    },\n    resultsScroll: {\n        flex: 1,\n        backgroundColor: \"#fff\"\n    }\n});"]},"metadata":{},"sourceType":"module"}