{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/home/Documents/GitHub/itunes_app/App.js\";\n\nimport React from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport SearchView from \"./components/SearchView\";\nimport LibraryView from \"./components/LibraryView\";\nimport ResultView from \"./components/ResultView\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { useState } from \"react/cjs/react.development\";\nvar Tabs = createBottomTabNavigator();\n\nvar App = function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      libraryList = _useState2[0],\n      setLibraryList = _useState2[1];\n\n  var addItem = function addItem(item) {\n    setLibraryList(function (prev) {\n      return [].concat(_toConsumableArray(prev), [item]);\n    });\n  };\n\n  return React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(Tabs.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          switch (route.name) {\n            case \"Music\":\n              iconName = focused ? \"heart\" : \"heart-outline\";\n              break;\n\n            case \"Search\":\n              iconName = focused ? \"musical-notes\" : \"musical-notes-outline\";\n              break;\n\n            case \"Result\":\n              iconName = focused ? \"library\" : \"library-outline\";\n\n            default:\n              iconName = focused ? \"library\" : \"library-outline\";\n              break;\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 20\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: \"tomato\",\n      inactiveTintColor: \"gray\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, React.createElement(Tabs.Screen, {\n    name: \"Search\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, function (props) {\n    return React.createElement(SearchView, _extends({}, props, {\n      onAdd: addItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 23\n      }\n    }));\n  }), React.createElement(Tabs.Screen, {\n    name: \"Music\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, function (props) {\n    return React.createElement(LibraryView, _extends({}, props, {\n      libraryList: libraryList,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }));\n  }), React.createElement(Tabs.Screen, {\n    name: \"Result\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, function (props) {\n    return React.createElement(ResultView, _extends({}, props, {\n      onAdd: addItem,\n      libraryList: libraryList,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }));\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/home/Documents/GitHub/itunes_app/App.js"],"names":["React","createBottomTabNavigator","NavigationContainer","SearchView","LibraryView","ResultView","Ionicons","useState","Tabs","App","libraryList","setLibraryList","addItem","item","prev","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor","props"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport SearchView from \"./components/SearchView\";\nimport LibraryView from \"./components/LibraryView\"\nimport ResultView from \"./components/ResultView\";\n\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\nimport { useState } from \"react/cjs/react.development\";\n\nconst Tabs = createBottomTabNavigator();\n\nconst App = () => {\n  const [libraryList, setLibraryList] = useState([]);\n\n  const addItem = (item) => {\n    setLibraryList((prev) => [...prev, item]);\n  };\n  return (\n    <NavigationContainer>\n      <Tabs.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n            switch (route.name) {\n              case \"Music\":\n                iconName = focused ? \"heart\" : \"heart-outline\";\n                break;\n              case \"Search\":\n                iconName = focused ? \"musical-notes\" : \"musical-notes-outline\";\n                break;\n              case \"Result\": \n                iconName = focused ? \"library\" : \"library-outline\";\n              default:\n                iconName = focused ? \"library\" : \"library-outline\";\n                break;\n            }\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n        })}\n        tabBarOptions={{ activeTintColor: \"tomato\", inactiveTintColor: \"gray\" }}\n      >\n        <Tabs.Screen name=\"Search\">\n          {(props) => <SearchView {...props} onAdd={addItem} />}\n        </Tabs.Screen>\n        <Tabs.Screen name=\"Music\">\n          {(props)=><LibraryView {...props} libraryList={libraryList} />}\n        </Tabs.Screen>\n        <Tabs.Screen name=\"Result\">\n          {(props)=><ResultView {...props} onAdd={addItem} libraryList={libraryList} />}\n        </Tabs.Screen>\n      </Tabs.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}